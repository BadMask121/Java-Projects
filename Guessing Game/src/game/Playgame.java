/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package game;

import com.sun.speech.freetts.*;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.net.URL;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.DataLine;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
/**
 *
 * @author User
 */
public class Playgame extends javax.swing.JFrame {

    private Clip clip1;
    private int LostGpoints = 0;
    private volatile int WinGpoint=200,Winflag=0,totalWinscore,totalLostscore=0;
    private volatile int Lostflag=0,defaultGpoint =50,Roundscore=1,totalscore=0;
    
    /** Creates new form Playgame */
    public Playgame() {
        super("Game Guezzer v1.0.0");
       Font f = new Font(getName(), Font.BOLD, 14);
       Color c = new Color(229,221,221);
        initComponents();
        guess.setText("GUEZZ THE NUMBER");
        guess.setFont(f);
        guess.setForeground(c);
        guess.setEditable(true);
        guess.setCaretPosition(SwingConstants.CENTER);
        setEnabled(true);
        setFocusTraversalKeysEnabled(true);
        setFocusable(true);
        
        
    score.setText(String.valueOf(defaultGpoint));
    scoreRounds.setText(String.valueOf(Roundscore));
             Thread t2=  new Thread(new Runnable() {
           @Override
           public void run() {
               
               try{            
            DataLine.Info datainfo =new DataLine.Info(Clip.class, null);            
            clip1 =(Clip)AudioSystem.getLine(datainfo);
      }catch(Exception e){
        e.printStackTrace();
        }
       
        try{
           Thread.sleep(500);
            URL soundURL = GuessingGame.class.getResource("/Audio/Game Play.wav");
            
            try{
            if(soundURL == null){
                System.err.println("Game play sound missing"+soundURL);
            }
            else{
            }
            }catch(Exception e){
            e.printStackTrace();
            }
            
            AudioInputStream audioInput = AudioSystem.getAudioInputStream(soundURL);
                Thread.sleep(400);      
                       clip1.open(audioInput);
                       clip1.loop(Clip.LOOP_CONTINUOUSLY);             
        }catch(Exception e){
        e.printStackTrace();}
       
            
                     clip1.start();
            do
            {
            try{
            Thread.sleep(400);
            }catch(Exception e)
            {
            e.printStackTrace();}
            }while(clip1.isActive());
                }
       });
       t2.start();

        
       
        // set font for opening of play mood
        guess.addFocusListener( new FocusListener() {
           @Override
           public void focusGained(FocusEvent e) {
               //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
          guess.setText("");
           guess.setFont(inputFont);
          guess.setForeground(Color.getHSBColor(210, 200, 123));
           }

           @Override
           public void focusLost(FocusEvent e) {
               //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
               //String newtext = "ENTER A NUMBER";
              // guess.setText("ENTER A NUMBER");
              // guess.setFont(f);
              
           }
       });
        validate();
        repaint();
    }
   
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        guess = new javax.swing.JTextField();
        showguess = new javax.swing.JLabel();
        background = new javax.swing.JLabel();
        sound = new javax.swing.JLabel();
        gpoint = new javax.swing.JLabel();
        score = new javax.swing.JLabel();
        Rounds = new javax.swing.JLabel();
        scoreRounds = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(340, 260));

        guess.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        guess.setToolTipText("Guess number");
        guess.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        guess.setDoubleBuffered(true);
        guess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guessActionPerformed(evt);
            }
        });
        guess.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                guessKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                guessKeyTyped(evt);
            }
        });

        showguess.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        showguess.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Background Images/menubg.gif"))); // NOI18N

        sound.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/High Volume_20px_2.png"))); // NOI18N
        sound.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                soundMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                soundMouseEntered(evt);
            }
        });

        gpoint.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        gpoint.setForeground(new java.awt.Color(255, 51, 102));
        gpoint.setText("Gpts :");

        score.setFont(new java.awt.Font("Corbel", 1, 13)); // NOI18N
        score.setForeground(new java.awt.Color(102, 0, 51));
        score.setToolTipText("");

        Rounds.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        Rounds.setForeground(new java.awt.Color(255, 51, 102));
        Rounds.setText("Rounds :");

        scoreRounds.setFont(new java.awt.Font("Myanmar Text", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(showguess, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(guess, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(78, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(gpoint)
                .addGap(4, 4, 4)
                .addComponent(score, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Rounds)
                .addGap(4, 4, 4)
                .addComponent(scoreRounds)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sound)
                .addGap(18, 18, 18))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(background)
                    .addGap(0, 7, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sound, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gpoint)
                        .addComponent(score, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Rounds)
                        .addComponent(scoreRounds)))
                .addGap(18, 18, 18)
                .addComponent(guess, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(showguess, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guessActionPerformed

    
    
    /*
    
    We are going to set a voice to say notify the user if he won or not
  */
    Font inputFont = new Font(getName(), Font.BOLD, 20);
 
    
    private synchronized void logic(KeyEvent evt){
    
    
    //creating a Runnable Thread for all the Methods of running PlayGame Method
    Thread t = new Thread(new Runnable() {
        @Override
        public void run() {
          Voice voice;   
        
        VoiceManager vm = VoiceManager.getInstance();
        voice=vm.getVoice(VOICENAME);
        
        voice.getGender();
        voice.allocate();
        
//Engine code for playing the game 
        int num1;
        int getguessnum = 0;
          String OrderRefNumber = "";
        num1 = 0 + (int) (Math.random()*12 - 1);
        OrderRefNumber +=(int) Math.floor(num1) + 0;
       
        //we are gonna set  keys and make it respond to the Engine Code
         switch (evt.getKeyCode()){
             case KeyEvent.VK_ENTER:{
                 char vchar = evt.getKeyChar();
                                               
              try {  
                 do{
                     if(!guess.getText().trim().equals("")){
                                  getguessnum = Integer.parseInt(guess.getText().trim());   
 if(getguessnum > 10){
                         guess.setEnabled(false);
                     voice.speak("Please only enter a number between 0-10");
                 JOptionPane.showMessageDialog(jPanel1, "Please enter a number between 0-10");
                 guess.setText(""); 
                 guess.setEnabled(true);
                 guess.requestFocus();
                     guess.setFont(inputFont);
                     guess.setForeground(Color.getHSBColor(210, 200, 123));
                     showguess.setText("");
                     
                  }else
                     
                      if(guess.getText().trim().equals(OrderRefNumber)){
                       
                          //creating a prompt to notify user he won
     showguess.setFont(inputFont);
     showguess.setText(""+OrderRefNumber);
   
               guess.setEnabled(false);
     voice.speak("YOU won.Guesser LOST!!!. The number is"+OrderRefNumber);
     JOptionPane.showMessageDialog(jPanel1, "YOU WON");
  
  showguess.setText("");
   guess.setText("");
  guess.setEnabled(true);
        guess.requestFocus();
        
  defaultGpoint +=15;
  Winflag +=1;
                      }
         else if(    guess.getText().trim() == null ? OrderRefNumber != null : !guess.getText().trim().equals(OrderRefNumber)){
   
//creating a prompt to notify user he lost     
             showguess.setFont(inputFont);
             showguess.setText(""+OrderRefNumber);     
               guess.setEnabled(false);
             voice.speak("guesser won.YOU LOST!!!. The number is"+OrderRefNumber);
     JOptionPane.showMessageDialog(jPanel1, "YOU LOST ");
     
        guess.setEnabled(true);
        guess.requestFocus();
        guess.setText("");
        showguess.setText("");
        defaultGpoint -=3;
        Lostflag +=1;
         }

 //Rounds Logic
 if(defaultGpoint <=LostGpoints || defaultGpoint >=WinGpoint){
 if(defaultGpoint <=LostGpoints){
     
     
     totalscore+=defaultGpoint;
     Roundscore +=1;
     Winflag=0;
     Lostflag=0;
     defaultGpoint=50;
 }
 }
 

  
 //Bonus Combo points
 if(Lostflag >= 1 && Winflag <1)    
 {
 if(Lostflag == 6){
         JOptionPane.showMessageDialog(jPanel1, "OOOOPSS!!! you have been comboed Gbooooombed",null, JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/img/Sad_50px.png")));      
         defaultGpoint -=15;

 }
 if(Lostflag > 7){
         JOptionPane.showMessageDialog(jPanel1, "OOOOPSS!!! you have been comboed Gbooooombed again",null, JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/img/Sad_50px.png")));
         defaultGpoint -=10;
         Lostflag=0;        
 }
 
 
 }else if(Winflag >= 1 && Lostflag <1)
 {
     if(Winflag == 3){
              JOptionPane.showMessageDialog(jPanel1, "Congrats!!!  awesome comboooooo",null, JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/img/Applause_50px.png")));
              defaultGpoint +=50;
              Winflag=0;
 }
 }

 
 
 
 
 // Game Over Logic (Fix Code)
  if(defaultGpoint <=LostGpoints && Roundscore==5){

      String[] options = {"Try again","Main Menu","Exit Game"};
      JOptionPane pane = new JOptionPane( "\t\t\tGAME OVER !!!\nTotal Score :"+totalscore+"\n YOU LOST TRY AGAIN",JOptionPane.INFORMATION_MESSAGE, 0, new ImageIcon(getClass().getResource("/img/Poor Quality_50px.png")),options,options[0]);
      pane.setFont(new Font("Segoe UI",Font.PLAIN,13));
      pane.setPreferredSize(new Dimension(400,150));   
      JDialog gameover = pane.createDialog(jPanel1,"Game Over");
   
      gameover.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
      gameover.setVisible(true);

if(pane.getValue() =="Exit Game"){
System.exit(0);
}else if(pane.getValue() == "Try again"){


    Roundscore =1;
    Winflag=0;
    Lostflag=0;
    defaultGpoint=50;
    
}else if(pane.getValue() == "Main Menu"){
dispose();
new Thread(new Runnable() {
    @Override
    public void run() {
 //       throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    new GuessingGame().setVisible(true);
    }
}).start();
}
//Winner Logic
 }else if(defaultGpoint >=WinGpoint && Roundscore==5)
 {
    JOptionPane.showMessageDialog(jPanel1, "\t\tCongratulations!!! \n\nYou just won Guezzer",null, JOptionPane.INFORMATION_MESSAGE, new ImageIcon(getClass().getResource("/img/ Poor Quality_50px.png")));
Winflag=0;
Lostflag=0;
defaultGpoint=50;
 }
  
 //setting points and rounds
  score.setText(String.valueOf(Math.abs(defaultGpoint)));
    scoreRounds.setText(String.valueOf(Math.abs(Roundscore)));
                 }else{
                     
                         guess.setEnabled(false);
                     voice.speak("Guezz cannot be empty only enter a number between 0-10");
                 JOptionPane.showMessageDialog(jPanel1, "Guess cannot be empty. only enter a number between 0-10");
                 guess.setText(""); 
                 guess.setEnabled(true);
                 guess.requestFocus();
                     guess.setFont(inputFont);
                     guess.setForeground(Color.getHSBColor(210, 200, 123));
                     showguess.setText(" ");
                     }
                 }
               while((guess.getText().equals("GUEZZ THE NUMBER")) && !guess.getText().trim().equals(""));
             }catch(Exception e){
e.printStackTrace();
                 JOptionPane.showMessageDialog(null, "There was an Error please contact efeThehero @ jeffreyefemena@yahoo.com");
             }
                     }
         }
        }
          });
    t.start();
    }
    
    private static final String VOICENAME="kevin16";
    private void guessKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guessKeyPressed
        // TODO add your handling code here:
logic(evt);
    }//GEN-LAST:event_guessKeyPressed
   
   
    //Creating a condition to make program not to accept Characters and strings e.g "A-Z #!_)()&^&%=/.\[]"
    private void guessKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guessKeyTyped
        // TODO add your handling code here:
        char vchar = evt.getKeyChar();
        if(!(Character.isDigit(vchar))
         || guess.getText().length() >=2)
        {
            evt.consume();
        }
    }//GEN-LAST:event_guessKeyTyped

    private void soundMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_soundMouseEntered

    }//GEN-LAST:event_soundMouseEntered

    private void soundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_soundMouseClicked
        if(sound.getIcon().toString().contains("/img/High%20Volume_20px_2.png")){
            
            clip1.stop();
            sound.setIcon(new ImageIcon(getClass().getResource("/img/No Audio_20px.png")));
            
        }else if( sound.getIcon().toString().contains("No%20Audio_20px.png")){
            
            clip1.start();
            clip1.loop(Clip.LOOP_CONTINUOUSLY);
            sound.setIcon(new ImageIcon(getClass().getResource("/img/High Volume_20px_2.png")));
        }
    }//GEN-LAST:event_soundMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Playgame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Playgame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Playgame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Playgame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Rounds;
    private javax.swing.JLabel background;
    private javax.swing.JLabel gpoint;
    private javax.swing.JTextField guess;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel score;
    private javax.swing.JLabel scoreRounds;
    private javax.swing.JLabel showguess;
    private javax.swing.JLabel sound;
    // End of variables declaration//GEN-END:variables

    void pack(float CENTER_ALIGNMENT) {
        //To change body of generated methods, choose Tools | Templates.
    }

    

}
