/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shop;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.DebugGraphics;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author User
 */
public class ShopAce extends JFrame {
int totalt;
String totalQ;
private Container contain;
	JFrame frame, frame1;
	JTextField searchtextbox;
	JLabel label;
	JButton button;
	JPanel panel;
	static JTable table;
JButton edit,deleterow;

	String[] columns = {"Roll No", "Name", "Class", "Section"};
/**
     * Creates new form ShopAce
     */
    public ShopAce() {
        initComponents();
        
   //     frame.setUndecorated(true);
       Cms k = new Cms();
       k.removeAll();
        int getI=product_name.getSelectedIndex();
         if(getI==0){
         product_price.setText("0");
         }
         update.setEnabled(false);
         delete.setEnabled(false);
         
         view.setVisible(false);
jButton1.setForeground(Color.red);
this.setTitle("ShopAce");
this.setIconImage(Toolkit.getDefaultToolkit().getImage("users.png"));
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        product_name = new javax.swing.JComboBox<>();
        product_price = new javax.swing.JTextField();
        totalAction = new javax.swing.JTextField();
        product_quantity = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        submit = new javax.swing.JButton();
        clear = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        view = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewtable = new javax.swing.JTable();
        back = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        update = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel1.setToolTipText("");
        jPanel1.setFocusCycleRoot(true);
        jPanel1.setOpaque(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Product Name");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Product Price");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Total");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Product Quantity");

        product_name.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select A Product...", "Orca Office chair", "bullet proof Door", "Iron Door", "Coca-cola", "Plastic Bowl", "Plastic Chair", "Electronic Cooker", "Water Heater", "Gas Cooker", "Television", "" }));
        product_name.setSelectedItem(product_name);
        product_name.setToolTipText("Select an Item\n");
        product_name.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        product_name.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                product_nameItemStateChanged(evt);
            }
        });
        product_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_nameActionPerformed(evt);
            }
        });

        product_price.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        product_price.setToolTipText("Please select a product");
        product_price.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        product_price.setDisabledTextColor(new java.awt.Color(0, 51, 51));
        product_price.setEnabled(false);
        product_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_priceActionPerformed(evt);
            }
        });

        totalAction.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        totalAction.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        totalAction.setDisabledTextColor(new java.awt.Color(0, 51, 51));
        totalAction.setEnabled(false);
        totalAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionActionPerformed(evt);
            }
        });
        totalAction.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                totalActionKeyPressed(evt);
            }
        });

        product_quantity.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        product_quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_quantityActionPerformed(evt);
            }
        });
        product_quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                product_quantityKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                product_quantityKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                product_quantityKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("       $");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 448, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(product_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalAction, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(product_name, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(product_price, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(96, 96, 96))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(product_name, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(product_price, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(9, 9, 9)
                        .addComponent(product_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(totalAction, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96))))
        );

        submit.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        submit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/shopping-cart.png"))); // NOI18N
        submit.setText("Purchase");
        submit.setToolTipText("");
        submit.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        submit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                submitMouseEntered(evt);
            }
        });
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/two-circling-arrows.png"))); // NOI18N
        clear.setToolTipText("Reset fields");
        clear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearMouseClicked(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/view.png"))); // NOI18N
        jButton1.setText("View Sales");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(submit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(clear)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(56, 56, 56))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        view.setBackground(new java.awt.Color(189, 217, 233));
        view.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewMouseClicked(evt);
            }
        });

        viewtable.setAutoCreateRowSorter(true);
        viewtable.setBackground(new java.awt.Color(0, 102, 102));
        viewtable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        viewtable.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        viewtable.setForeground(new java.awt.Color(204, 255, 255));
        viewtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Sales ID", "Customers ID", "Product Name", "Product Price", "Product Quantity", "Product Date and Time"
            }
        ));
        viewtable.setToolTipText("");
        viewtable.setFillsViewportHeight(true);
        viewtable.setName(""); // NOI18N
        viewtable.setRequestFocusEnabled(false);
        viewtable.setRowHeight(32);
        viewtable.setSelectionBackground(new java.awt.Color(0, 33, 66));
        viewtable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                viewtablePropertyChange(evt);
            }
        });
        viewtable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                viewtableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(viewtable);
        if (viewtable.getColumnModel().getColumnCount() > 0) {
            viewtable.getColumnModel().getColumn(0).setPreferredWidth(50);
        }

        back.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/back-arrow.png"))); // NOI18N
        back.setText("Back");
        back.setToolTipText("");
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backMouseEntered(evt);
            }
        });
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewLayout = new javax.swing.GroupLayout(view);
        view.setLayout(viewLayout);
        viewLayout.setHorizontalGroup(
            viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1025, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(back)))
                .addContainerGap())
        );
        viewLayout.setVerticalGroup(
            viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(back)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        delete.setBackground(new java.awt.Color(138, 86, 55));
        delete.setForeground(new java.awt.Color(204, 255, 255));
        delete.setText("DELETE");
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteMouseExited(evt);
            }
        });
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(0, 204, 204));
        update.setForeground(new java.awt.Color(0, 102, 102));
        update.setText("UPDATE");
        update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updateMouseExited(evt);
            }
        });
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(106, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(152, 152, 152))
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(view, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(88, 88, 88))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(118, Short.MAX_VALUE)
                    .addComponent(view, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(122, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
Calendar cal = Calendar.getInstance();
System.out.println(dateFormat.format(cal.getTime()));
        try{
        Class.forName("com.mysql.jdbc.Driver");
        String url ="jdbc:mysql://127.0.0.1:3306/shopace";
        Statement st;
        ResultSet rs;

        try (Connection con = DriverManager.getConnection(url,"ecobank","efemena1")) {

                String query = "insert into customer (product_name,product_price,product_quantity,total,currency,purchase_date)"+"values(?,?,?,?,?,?)";
                PreparedStatement ps = con.prepareStatement(query);

                ps.setString(1, product_name.getSelectedItem().toString());
                ps.setInt(2, Integer.parseInt(product_price.getText()));
                ps.setInt(3, Integer.parseInt(product_quantity.getText()));
                ps.setInt(4, Integer.parseInt(totalAction.getText().replace("$", "")));
                ps.setString(5, totalAction.getText().substring(0, 1));
          ps.setString(6,dateFormat.format(cal.getTime()));
                ps.execute();

                if(!ps.equals(true)){
                    JOptionPane.showMessageDialog(null, "success");

        product_name.setSelectedIndex(0);
            product_price.setText("0");
       product_quantity.setText("");
      totalAction.setText("");
                }
                else{
                    JOptionPane.showMessageDialog(null, "bad");
                }

            }

        }catch(HeadlessException | ClassNotFoundException | NumberFormatException | SQLException e)
        {
            int g=product_name.getSelectedIndex();
            if( "".equals(product_quantity.getText())  || g==0 || product_price.getText()=="0"){
            JOptionPane.showMessageDialog(jPanel2, "Please check your entry");
           
            }
        }
    }//GEN-LAST:event_submitActionPerformed

    private void product_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_nameActionPerformed
    }//GEN-LAST:event_product_nameActionPerformed


    private void product_nameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_product_nameItemStateChanged

        int getItem=product_name.getSelectedIndex();

        switch(getItem){
            case 0:product_price.setText("0");
         product_quantity.setToolTipText("Please select a product");
       break;
            case 1:product_price.setText("3000");

        // product_quantity.setToolTipText("How many "+product_name.getSelectedItem().toString() +" do you want");
       break;

        case 2:product_price.setText("2000");

       break;

            case 3 :product_price.setText("5000");
       break;
            case 4:product_price.setText("1000");
       break;

        case 5:product_price.setText("200");
       break;
            case 6 :product_price.setText("500");
       break;
            case 7:product_price.setText("8000");
       break;
        case 8:product_price.setText("2300");
       break;
        case 9 :product_price.setText("630");
       break;
            case 10:product_price.setText("400");
       break;
            default: product_quantity.setToolTipText("How many "+product_name.getSelectedItem().toString() +" do you want");
            break;
        }

        if(product_name.getSelectedIndex()==0){
          product_quantity.setToolTipText("Please select a product");
        }else{
         product_quantity.setToolTipText("How many "+product_name.getSelectedItem().toString() +" do you want");
        }

         try {
    totalt = Integer.parseInt(product_price.getText()) * Integer.parseInt(product_quantity.getText()) ;
   totalQ = String.valueOf(totalt);
       if(product_quantity.getText().equals("")){
        totalQ = String.valueOf("");
   }else{
     totalAction.setText("$"+totalQ);
                }
        } catch (NumberFormatException e) {
            if("".equals(product_quantity.getText())){
totalAction.setText("");
        }else{
     JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }

    }//GEN-LAST:event_product_nameItemStateChanged

    private void product_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_product_priceActionPerformed

    private void product_quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_quantityActionPerformed


    }//GEN-LAST:event_product_quantityActionPerformed

    private void totalActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionActionPerformed

    }//GEN-LAST:event_totalActionActionPerformed

    private void totalActionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalActionKeyPressed

    }//GEN-LAST:event_totalActionKeyPressed

    private void product_quantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_product_quantityKeyTyped

    }//GEN-LAST:event_product_quantityKeyTyped

    private void product_quantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_product_quantityKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_product_quantityKeyPressed

    private void product_quantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_product_quantityKeyReleased
  char c = evt.getKeyChar();

         if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_ENTER) || (c == KeyEvent.VK_TAB))) {
                getToolkit().beep();
                evt.consume();
            }else
         {

        switch(evt.getKeyChar()){
            case KeyEvent.VK_ENTER:
                int h = product_name.getSelectedIndex();
          if(product_price.getText().equals("") || h==0){
         JOptionPane.showMessageDialog(null, "Please select a Product");
     product_quantity.setText("");
         break;
          }
    else{
        try {
    totalt = Integer.parseInt(product_price.getText()) * Integer.parseInt(product_quantity.getText()) ;
   totalQ = String.valueOf(totalt);
       if(product_quantity.getText().equals("")){
        totalQ = String.valueOf("");
   }else{
     totalAction.setText("$"+totalQ );
                }
        } catch (Exception e) {
            if("".equals(product_quantity.getText())){
totalAction.setText("");
        }else{
     JOptionPane.showMessageDialog(null, e.getMessage());   }
        }}    /*
        } catch (Exception e) {
     JOptionPane.showMessageDialog(null, "Please select a Product");
        }
   }    */
                break;
            default :
                          int h2 = product_name.getSelectedIndex();
          if(product_price.getText().equals("") || h2==0){
         JOptionPane.showMessageDialog(null, "Please select a Product");
         product_quantity.setText("");
     }
    else{
        try {
   if(product_quantity.getText().equals("")){
   totalAction.setText("");
   }else{

    totalt = Integer.valueOf(product_price.getText()) * Integer.valueOf(product_quantity.getText()) ;
   totalQ = String.valueOf(totalt);

     totalAction.setText("$" +totalQ );
                }

        } catch (Exception e) {
            if("".equals(product_quantity.getText())){
   totalAction.setText("");
        }else{
     JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
          }
        break;

        }}
   //int p = Integer.parseInt(getprice);
   //int q = Integer.parseInt(quantitytotal);

    }//GEN-LAST:event_product_quantityKeyReleased

    private void submitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitMouseEntered

    }//GEN-LAST:event_submitMouseEntered

    private void viewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewMouseClicked
      
    }//GEN-LAST:event_viewMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     contain = getContentPane();

   contain.remove(jPanel1);
   contain.remove(jPanel2);
   update.setEnabled(true);
   delete.setEnabled(true);
view.setVisible(true);
   validate(); // Changed here
                repaint(); // Changed here
Font f1 = new Font("Lucida Sans",Font.BOLD, 16);
Color c = new Color(109,36,62);
ImageIcon i = new ImageIcon("../img/search.png");
                searchtextbox = new JTextField();
		searchtextbox.setBounds(130,10,150,30);
                searchtextbox.setFont(new Font("candara",Font.PLAIN,14));
                
		label = new JLabel("Search Sales");
		label.setBounds(16, 13, 100, 20);
                label.setFont(f1);
                label.setForeground(c);
                label.setDebugGraphicsOptions(DebugGraphics.NONE_OPTION);
                
		button = new JButton("search");
		button.setBounds(300,10,100,30);
                button.setFont(new Font("Corbel",Font.PLAIN,14));
         button.setIcon(i);
         button.setDebugGraphicsOptions(DebugGraphics.NONE_OPTION);
 DefaultTableModel model = (DefaultTableModel) viewtable.getModel();

view.add(searchtextbox);
view.add(label);
view.add(button);

//viewtable.add(deleterow);xx   
JLabel error;
Connection conn =null;
 Statement st = null;
        ResultSet rs;
              try{

        Class.forName("com.mysql.jdbc.Driver");
        String urls ="jdbc:mysql://127.0.0.1:3306/shopace";
       
        conn = DriverManager.getConnection(urls,"ecobank","efemena1");

        String getdata ="select * from customer";
        st= conn.createStatement();
        rs =st.executeQuery(getdata);
                
        while (rs.next()){
         
            int id = rs.getInt("id");
String productname = rs.getString("product_name");
int productprice = rs.getInt("product_price");
int productquantity = rs.getInt("product_quantity");
//int total = rs.getInt("totalt");

String currency = rs.getString("currency");
Timestamp datetime = rs.getTimestamp("purchase_date");
model.addRow( new Object[]{"",rs.getRow(),id,productname,currency+productprice,productquantity,datetime});
        
        }
 if(rs.getRow()> 1){
  JOptionPane.showMessageDialog(null, "No results found");
 }       
        }catch(Exception evet){
        evet.printStackTrace();
        }finally{
              try{
         if(st!=null)
            conn.close();
      }catch(SQLException se){
      }// do nothing
      try{
         if(conn!=null)
            conn.close();
      }catch(SQLException se){
         se.printStackTrace();
      }//end finally try
              }

              
              searchtextbox.addKeyListener( new KeyListener() {
         @Override
         public void keyTyped(KeyEvent e) {
        //     throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
         }

         @Override
         public void keyPressed(KeyEvent e) {
          //   throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
         }

         @Override
         public void keyReleased(KeyEvent e) {
      //       throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
             searchResult(model);
         }
     });
              
button.addActionListener(new ActionListener() {
         @Override
         public void actionPerformed(ActionEvent e) {
     //        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  //      JOptionPane.showMessageDialog(null, textbox.getText());
         searchResult(model);
    
            //textbox.getText();
              }
     });
             
    }//GEN-LAST:event_jButton1ActionPerformed
private void searchResult(DefaultTableModel model){
  
  try{

        Class.forName("com.mysql.jdbc.Driver");
        String urls ="jdbc:mysql://127.0.0.1:3306/shopace";
        Statement st;
        ResultSet rs;
        Connection conn = DriverManager.getConnection(urls,"ecobank","efemena1");

if("".equals(searchtextbox.getText())){
          JOptionPane.showMessageDialog(null, "Please enter search query");
}else{
 model.setRowCount(0);
        String getdata ="select * from customer where product_name like ?";

        //st= conn.createStatement();
PreparedStatement g=conn.prepareStatement(getdata);
g.setString(1, "%"+searchtextbox.getText()+"%");
//g.setString(2, searchtextbox.getText());

rs=g.executeQuery();

        while (rs.next()){
      

  int searchid = rs.getInt("id");
String searchproductname = rs.getString("product_name");
int searchproductprice = rs.getInt("product_price");
int searchproductquantity = rs.getInt("product_quantity");
//int total = rs.getInt("totalt");

String searchcurrency = rs.getString("currency");
Timestamp searchdatetime = rs.getTimestamp("purchase_date");
model.addRow( new Object[]{"",rs.getRow(),searchid,searchproductname,searchcurrency+searchproductprice,searchproductquantity,searchdatetime});
 //JOptionPane.showMessageDialog(null, rs.toString());       
       
        }
}
        }catch( HeadlessException | ClassNotFoundException | SQLException evet){
        
        }
}
    private void backMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_backMouseEntered

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
    
        contain = getContentPane();
          view.setVisible(false);
   
          contain.add(jPanel1);
          contain.add(jPanel2);
update.setEnabled(false);
delete.setEnabled(false);
                validate(); // Changed here
                repaint(); // Changed here
          
    DefaultTableModel mo = (DefaultTableModel) viewtable.getModel();
    mo.setRowCount(0);
    }//GEN-LAST:event_backActionPerformed

    private void clearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseClicked

        product_name.setSelectedIndex(0);
        product_price.setText("0");
        product_quantity.setText("");
        totalAction.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_clearMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
DefaultTableModel updatemodel = (DefaultTableModel) viewtable.getModel();

int eh = viewtable.getEditingRow();
int d = viewtable.getEditingColumn();

if(viewtable.getCellEditor()==null){
}else{
if(viewtable.isEditing()){
 }
}
    }//GEN-LAST:event_updateActionPerformed

    private void viewtablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_viewtablePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_viewtablePropertyChange

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        DefaultTableModel updatemodel = (DefaultTableModel) viewtable.getModel();

        
//viewtable.removeColumnSelectionInterval(2, 3);

    int l = viewtable.getSelectedRow();
    int h= viewtable.getSelectedColumnCount();

   String val =updatemodel.getValueAt(l, 2).toString();
    int value = Integer.parseInt(val);
//    JOptionPane.showMessageDialog(null, value);
Thread t = new Thread();
try{
        Class.forName("com.mysql.jdbc.Driver");
        String urls ="jdbc:mysql://127.0.0.1:3306/shopace";
Connection conn;
 Statement st ;
        ResultSet rs;
        
        conn = DriverManager.getConnection(urls,"ecobank","efemena1");
        st= conn.createStatement();
        
if(value >=1){
final JOptionPane  msg = new JOptionPane(" \t   Please wait Deleting...",JOptionPane.PLAIN_MESSAGE);
    final JDialog  dlg = msg.createDialog("\t Please wait... ");
    
    dlg.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    int p= JOptionPane.showConfirmDialog(null, "Are you sure you want to Delete this data","Deleting customer ID "+value, JOptionPane.YES_NO_OPTION);
if(p==JOptionPane.YES_OPTION)
{   
    final Timer time = new Timer(6000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            dlg.setVisible(false);
        }
    });
    time.start();
                        dlg.setVisible(true);
    
     
    String delete ="DELETE FROM customer WHERE id =? ";
    
PreparedStatement g=conn.prepareStatement(delete);
g.setInt(1, value);
    g.executeUpdate();
}else if(p==JOptionPane.NO_OPTION){
//Do nothing
}
}
//Set validation;

updatemodel.setRowCount(0);
 String show ="select * from customer";     

PreparedStatement showset=conn.prepareStatement(show);


rs= showset.executeQuery();

while(rs.next()){
  int showid = rs.getInt("id");
String showproductname = rs.getString("product_name");
int showproductprice = rs.getInt("product_price");
int showproductquantity = rs.getInt("product_quantity");

String showcurrency = rs.getString("currency");
Timestamp showdatetime = rs.getTimestamp("purchase_date");
updatemodel.addRow( new Object[]{"",rs.getRow(),showid,showproductname,showcurrency+showproductprice,showproductquantity,showdatetime});
 
 }

        }catch( HeadlessException | ClassNotFoundException | SQLException evet){
evet.printStackTrace();
        }

    }//GEN-LAST:event_deleteActionPerformed

    private void viewtableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_viewtableKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_viewtableKeyReleased

    private void updateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseEntered
Color c = new Color(218,185,250);
        update.setBackground(c);
    }//GEN-LAST:event_updateMouseEntered

    private void updateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseExited
       Color c = new Color(0,204,204);
        update.setBackground(c);
    }//GEN-LAST:event_updateMouseExited

    private void deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseEntered
        
        Color c = new Color(255,102,153);
        delete.setBackground(c);
        delete.setForeground( new Color(55,28,35));
    }//GEN-LAST:event_deleteMouseEntered

    private void deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseExited
        Color c = new Color(138,86,55);
        delete.setBackground(c);
        delete.setForeground(new Color(204,255,255));
    }//GEN-LAST:event_deleteMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                   javax.swing.UIManager.setLookAndFeel(info.getClassName());
                 break;
                }
                
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShopAce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShopAce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShopAce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShopAce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ShopAce().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel clear;
    private javax.swing.JButton delete;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> product_name;
    private javax.swing.JTextField product_price;
    private javax.swing.JTextField product_quantity;
    private javax.swing.JButton submit;
    private javax.swing.JTextField totalAction;
    private javax.swing.JButton update;
    private javax.swing.JPanel view;
    private javax.swing.JTable viewtable;
    // End of variables declaration//GEN-END:variables
}
